// app/assets/javascripts/channels/tokens.js

// App.tokens = App.cable.subscriptions.create(
//   { channel: 'TokensChannel', room: guid() }, {

var el = document.querySelectorAll('meta[name="room-token"]')[0];
var roomToken = el.getAttribute('content');
console.log(roomToken);

App.tokens = App.cable.subscriptions.create(
  // { channel: 'TokensChannel', room: "CONSTANT_ROOM_NAME" }, {
  { channel: 'TokensChannel', room: roomToken }, {

  received: function(data) {
    this.loginUser(data);
  },

  loginUser: function(data) {
    // var token = data.token_value;
    var userEmail = data.user_email;
    var userPasswordToken = data.user_password_token;
    var userData = {
      user_email: userEmail,
      user_password_token: userPasswordToken
    };

    // var userData = new FormData();
    // userData.append('user_email', userEmail);
    // userData.append('user_password_token', userPasswordToken);

    var el = document.querySelectorAll('meta[name="csrf-token"]')[0];
    var csrfToken = el.getAttribute('content');

    var xmlhttp = new XMLHttpRequest();

    xmlhttp.onreadystatechange = function() {
      if (xmlhttp.readyState == XMLHttpRequest.DONE ) {
        if (xmlhttp.status == 200) {
          var response = JSON.parse(xmlhttp.response)
          window.location.replace(response.url);
          console.log(response);
          console.log(response.url);
        }
        else if (xmlhttp.status == 400) {
          alert('There was an error 400');
        }
        else {
          alert('something else other than 200 was returned');
        }
      }
    };

    xmlhttp.open(
      "POST",
      "<%= Rails.application.routes.url_helpers.url_for(
        host: "localhost:3000", controller: "sessions", action: "create"
      ) %>",
      true
    );

    // xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
    xmlhttp.setRequestHeader('X-CSRF-Token', csrfToken);
    // xmlhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
    xmlhttp.setRequestHeader("Content-Type", "application/json");
    console.log(userData);
    // xmlhttp.send(userData);
    xmlhttp.send(JSON.stringify(userData));
    console.log(xmlhttp);
  }
});
